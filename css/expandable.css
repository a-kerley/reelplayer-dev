/* ========================================
   EXPANDABLE MODE STYLES
   All CSS variables defined in variables.css
   ======================================== */

/* ========================================
   1. WRAPPER & STATES
   ======================================== */

/* Expandable mode player wrapper */
.player-wrapper.expandable-mode {
  position: relative;
  overflow: hidden;
  transition: height var(--expandable-transition-duration) var(--expandable-transition-easing),
              max-height var(--expandable-transition-duration) var(--expandable-transition-easing);
  height: var(--expandable-collapsed-height, 120px);
  max-height: var(--expandable-collapsed-height, 120px);
  padding: 0;
  z-index: 1;
}

/* Expanded state */
.player-wrapper.expandable-mode.expanded {
  height: var(--expandable-expanded-height, 500px);
  max-height: var(--expandable-expanded-height, 500px);
}

/* ========================================
   2. PROJECT TITLE OVERLAY
   ======================================== */

.player-wrapper.expandable-mode .project-title-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: var(--expandable-collapsed-height, 120px);
  background-size: contain;
  background-position: center center;
  background-repeat: no-repeat;
  background-origin: content-box;
  background-clip: content-box;
  z-index: 10;
  pointer-events: none;
  opacity: 1;
  transition: opacity var(--expandable-transition-duration) var(--expandable-transition-easing);
  padding: var(--expandable-overlay-padding) 0;
  box-sizing: border-box;
}

/* Hide overlay when expanded or when playing in collapsed state */
.player-wrapper.expandable-mode.expanded .project-title-overlay,
.player-wrapper.expandable-mode.playing-collapsed .project-title-overlay {
  opacity: 0;
  pointer-events: none;
}

/* ========================================
   3. CONTENT CONTAINER
   ======================================== */

.player-wrapper.expandable-mode .player-content {
  position: relative;
  z-index: 5;
  height: 100%;
  display: flex;
  flex-direction: column;
  flex: 1;
  /* Always use flex-start - we'll use padding to create centering effect */
  justify-content: flex-start;
  transition: padding var(--expandable-transition-duration) var(--expandable-transition-easing),
              gap var(--expandable-transition-duration) var(--expandable-transition-easing);
}

/* Collapsed state - center vertically using padding */
.player-wrapper.expandable-mode:not(.expanded) .player-content {
  padding-top: calc((var(--expandable-collapsed-height, 120px) - var(--expandable-waveform-height)) / 2 + var(--expandable-collapsed-waveform-offset));
  padding-bottom: calc((var(--expandable-collapsed-height, 120px) - var(--expandable-waveform-height)) / 2 - var(--expandable-collapsed-waveform-offset));
}

/* Expanded state - normal padding */
.player-wrapper.expandable-mode.expanded .player-content {
  padding-top: var(--player-padding);
  padding-left: var(--player-padding);
  padding-right: var(--player-padding);
  padding-bottom: var(--player-padding-bottom);
  gap: var(--expandable-content-gap);
}

/* ========================================
   4. PLAYER CONTROLS & CONTAINER
   ======================================== */

/* Base container - stays in normal flow in both states */
.player-wrapper.expandable-mode .player-container {
  display: flex;
  align-items: center;
  width: 100%;
  box-sizing: border-box;
  margin: 0 !important; /* Override inline styles from player.html */
  flex-shrink: 0; /* Prevent shrinking in flex layout */
  transition: padding var(--expandable-transition-duration) var(--expandable-transition-easing),
              gap var(--expandable-transition-duration) var(--expandable-transition-easing),
              margin var(--expandable-transition-duration) var(--expandable-transition-easing);
}

/* Collapsed state - horizontal padding only */
.player-wrapper.expandable-mode:not(.expanded) .player-container {
  padding: 0 var(--player-padding);
}

/* Expanded state - add gap, margins, and remove padding (parent has it) */
.player-wrapper.expandable-mode.expanded .player-container {
  gap: var(--expandable-player-gap);
  padding: 0; /* Remove padding since player-content now has it */
  margin-top: var(--expandable-waveform-margin-top);
  margin-bottom: var(--expandable-waveform-margin-bottom);
}

/* Hide play/pause button and volume when collapsed */
.player-wrapper.expandable-mode:not(.expanded) #playPause,
.player-wrapper.expandable-mode:not(.expanded) .volume-control {
  opacity: 0;
  pointer-events: none;
  transition: opacity var(--expandable-transition-duration) var(--expandable-transition-easing);
}

/* Show controls when expanded */
.player-wrapper.expandable-mode.expanded #playPause,
.player-wrapper.expandable-mode.expanded .volume-control {
  opacity: 1;
  pointer-events: auto;
}

/* ========================================
   5. WAVEFORM & AUDIO CONTROLS
   ======================================== */

.player-wrapper.expandable-mode .waveform-and-volume {
  flex: 1;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  min-height: var(--expandable-waveform-height);
}

.player-wrapper.expandable-mode #waveform {
  height: var(--expandable-waveform-height);
  min-height: var(--expandable-waveform-height);
  flex: 1;
  flex-shrink: 0;
  display: block;
  position: relative;
  width: auto;
  max-width: none;
}

.player-wrapper.expandable-mode #waveform > canvas {
  width: 100%;
  height: 100%;
  display: block;
}

/* Hide waveform when collapsed (unless playing with waveform enabled) */
.player-wrapper.expandable-mode:not(.expanded):not(.playing-collapsed) #waveform {
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
}

/* Show waveform when expanded or playing-collapsed */
.player-wrapper.expandable-mode.expanded #waveform,
.player-wrapper.expandable-mode.playing-collapsed #waveform {
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
  transition: opacity var(--expandable-transition-duration) var(--expandable-transition-easing);
}

/* Hide time displays when collapsed - keep in layout to maintain waveform width */
.player-wrapper.expandable-mode:not(.expanded) .playhead-time,
.player-wrapper.expandable-mode:not(.expanded) #total-time {
  opacity: 0;
  pointer-events: none;
  transition: opacity var(--expandable-transition-duration) var(--expandable-transition-easing);
}

/* Show times when expanded */
.player-wrapper.expandable-mode.expanded .playhead-time,
.player-wrapper.expandable-mode.expanded #total-time {
  opacity: 1;
  pointer-events: auto;
  transition: opacity var(--expandable-transition-duration) var(--expandable-transition-easing);
}

/* ========================================
   6. PLAYLIST
   ======================================== */

/* Playlist - always in DOM but hidden when collapsed */
.player-wrapper.expandable-mode .playlist {
  /* Override base playlist.css styles that conflict */
  margin-top: 0 !important; /* Gap handled by player-content gap property */
  margin-bottom: var(--expandable-playlist-bottom-margin) !important;
  margin-left: var(--expandable-playlist-inset) !important;
  margin-right: var(--expandable-playlist-inset) !important;
  
  /* Add internal bottom padding for spacing inside the playlist */
  padding-bottom: var(--expandable-playlist-internal-padding) !important;
  
  /* Flexbox behavior for expandable mode */
  flex: 1 1 auto !important; /* Allow it to grow and shrink */
  min-height: 0 !important; /* Allow flexbox to shrink below content size */
  
  /* Width adjusted for insets while keeping scrollbar-hiding */
  width: calc(100% - (var(--expandable-playlist-inset) * 2) + var(--expandable-scrollbar-width)) !important;
  max-width: calc(100% - (var(--expandable-playlist-inset) * 2) + var(--expandable-scrollbar-width)) !important;
  
  /* Keep scrollbar hiding from base - only override the padding-right position */
  padding-right: calc(var(--expandable-scrollbar-width) + var(--expandable-playlist-inset)) !important;
  
  /* Transition for smooth show/hide */
  transition: opacity var(--expandable-transition-duration) var(--expandable-transition-easing);
}

/* Hide playlist when collapsed */
.player-wrapper.expandable-mode:not(.expanded) .playlist {
  opacity: 0;
  pointer-events: none;
  max-height: 0;
  overflow: hidden;
}

/* Show playlist when expanded */
.player-wrapper.expandable-mode.expanded .playlist {
  opacity: 1;
  pointer-events: auto;
  max-height: none;
}

/* ========================================
   7. MISC ELEMENTS
   ======================================== */

/* Title visibility */
.player-wrapper.expandable-mode .reel-title {
  transition: opacity var(--expandable-transition-duration) var(--expandable-transition-easing);
  /* Ensure consistent styling with static mode */
  margin-bottom: var(--reel-title-padding-bottom, 0.8rem);
  /* Remove any top margin for consistent positioning */
  margin-top: 0;
}

.player-wrapper.expandable-mode:not(.expanded) .reel-title {
  opacity: 0;
  pointer-events: none;
  max-height: 0;
  margin-top: 0 !important;
  margin-bottom: 0 !important;
  overflow: hidden;
  transition: opacity var(--expandable-transition-duration) var(--expandable-transition-easing),
              max-height var(--expandable-transition-duration) var(--expandable-transition-easing),
              margin var(--expandable-transition-duration) var(--expandable-transition-easing);
}

.player-wrapper.expandable-mode.expanded .reel-title {
  opacity: 1;
  pointer-events: auto;
  max-height: 100px; /* Large enough for any title */
  transition: opacity var(--expandable-transition-duration) var(--expandable-transition-easing),
              max-height var(--expandable-transition-duration) var(--expandable-transition-easing),
              margin var(--expandable-transition-duration) var(--expandable-transition-easing);
}

/* Track info visibility */
.player-wrapper.expandable-mode .track-info {
  transition: opacity var(--expandable-transition-duration) var(--expandable-transition-easing);
  /* Match static mode positioning - align with waveform left edge */
  margin-bottom: var(--expandable-track-info-bottom) !important;
  margin-left: var(--expandable-track-info-left) !important;
  padding-left: var(--expandable-track-info-padding) !important;
  margin-top: var(--expandable-track-info-top) !important;
}

.player-wrapper.expandable-mode:not(.expanded) .track-info {
  opacity: 0;
  pointer-events: none;
  max-height: 0;
  margin-top: 0 !important;
  margin-bottom: 0 !important;
  overflow: hidden;
  transition: opacity var(--expandable-transition-duration) var(--expandable-transition-easing),
              max-height var(--expandable-transition-duration) var(--expandable-transition-easing),
              margin var(--expandable-transition-duration) var(--expandable-transition-easing);
}

.player-wrapper.expandable-mode.expanded .track-info {
  opacity: 1;
  pointer-events: auto;
  max-height: 50px; /* Large enough for track info */
  transition: opacity var(--expandable-transition-duration) var(--expandable-transition-easing),
              max-height var(--expandable-transition-duration) var(--expandable-transition-easing),
              margin var(--expandable-transition-duration) var(--expandable-transition-easing);
}

/* Loading indicator */
.player-wrapper.expandable-mode #loading {
  z-index: 15;
}
